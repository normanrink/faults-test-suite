[DEFAULT]
# The 'DEFAULT' section is ignored by the coverage tool.
# Use the 'DEFAULT' section to define names that should be
# interpolated in susequent sections.
binaries:   ${BINARIES_FOLDER}
suite:      ${SUITE_FOLDER}/veri
veri_runs:  ${VERI_RUNS}

[SUITE veri]
folder:     %(suite)s

[TEST array_sum.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/array_sum/array_sum.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/array_sum/reference.veri.out
folder:     %(suite)s/array_sum.encoded/

[TEST crc.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/crc/crc.veri.encoded %(binaries)s/crc/crc_input_small.pcm
output:     cs.out
expected:   0
reference:  %(binaries)s/crc/reference.veri.out
folder:     %(suite)s/crc.encoded/

[TEST des.tiny.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/des/des.tiny.veri.encoded -e %(binaries)s/des/des.input.tiny.txt /dev/null 809
output:     cs.out
expected:   0
reference:  %(binaries)s/des/reference.tiny.veri.out
folder:     %(suite)s/des.tiny.encoded/

[TEST des.large.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/des/des.large.veri.encoded -e %(binaries)s/des/des.input.tiny.txt /dev/null 809
output:     cs.out
expected:   0
reference:  %(binaries)s/des/reference.large.veri.out
folder:     %(suite)s/des.tiny.encoded/

[TEST des.huge.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/des/des.huge.veri.encoded -e %(binaries)s/des/des.input.huge.txt /dev/null 809
output:     cs.out
expected:   0
reference:  %(binaries)s/des/reference.huge.veri.out
folder:     %(suite)s/des.huge.encoded/

[TEST dijkstra.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/dijkstra/dijkstra.veri.encoded %(binaries)s/dijkstra/dijkstra_input.dat
output:     cs.out
expected:   0
reference:  %(binaries)s/dijkstra/reference.veri.out
folder:     %(suite)s/dijkstra.encoded/

[TEST matmul.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/matmul/matmul.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/matmul/reference.veri.out
folder:     %(suite)s/matmul.encoded/

[TEST matmul_overflow.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/matmul_overflow/matmul_overflow.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/matmul_overflow/reference.veri.out
folder:     %(suite)s/matmul_overflow.encoded/

[TEST matmul_while.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/matmul_while/matmul_while.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/matmul_while/reference.veri.out
folder:     %(suite)s/matmul_while.encoded/

[TEST ptrarith.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/ptrarith/ptrarith.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/ptrarith/reference.veri.out
folder:     %(suite)s/ptrarith.encoded/

[TEST bubblesort.best.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/bubblesort.best/bubblesort.best.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/bubblesort.best/reference.veri.out
folder:     %(suite)s/bubblesort.best.encoded/

[TEST bubblesort.random.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/bubblesort.random/bubblesort.random.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/bubblesort.random/reference.veri.out
folder:     %(suite)s/bubblesort.random.encoded/

[TEST bubblesort.random-binary.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/bubblesort.random-binary/bubblesort.random-binary.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/bubblesort.random-binary/reference.veri.out
folder:     %(suite)s/bubblesort.random-binary.encoded/

[TEST bubblesort.worst.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/bubblesort.worst/bubblesort.worst.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/bubblesort.worst/reference.veri.out
folder:     %(suite)s/bubblesort.worst.encoded/

[TEST quicksort.best.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/quicksort.best/quicksort.best.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/quicksort.best/reference.veri.out
folder:     %(suite)s/quicksort.best.encoded/

[TEST quicksort.random.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/quicksort.random/quicksort.random.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/quicksort.random/reference.veri.out
folder:     %(suite)s/quicksort.random.encoded/

[TEST quicksort.random-binary.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/quicksort.random-binary/quicksort.random-binary.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/quicksort.random-binary/reference.veri.out
folder:     %(suite)s/quicksort.random-binary.encoded/

[TEST quicksort.worst.encoded]
profile:    verify
runs:       0, %(veri_runs)s
binary:     %(binaries)s/quicksort.worst/quicksort.worst.veri.encoded
output:     cs.out
expected:   0
reference:  %(binaries)s/quicksort.worst/reference.veri.out
folder:     %(suite)s/quicksort.worst.encoded/
